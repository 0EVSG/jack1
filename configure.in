dnl Process this file with autoconf to produce a configure script.
AC_INIT(client.c)

AC_CONFIG_AUX_DIR(.)

JACK_MAJOR_VERSION=0
JACK_MINOR_VERSION=16
JACK_MICRO_VERSION=1

BETA=

AC_SUBST(JACK_MAJOR_VERSION)
AC_SUBST(JACK_MINOR_VERSION)
AC_SUBST(JACK_MICRO_VERSION)

JACK_SO_VERSION=${JACK_MAJOR_VERSION}:${JACK_MINOR_VERSION}:${JACK_MICRO_VERSION}${BETA}
JACK_VERSION=$JACK_MAJOR_VERSION.$JACK_MINOR_VERSION.${JACK_MICRO_VERSION}${BETA}
JACK_RELEASE=$JACK_MAJOR_VERSION-$JACK_MINOR_VERSION-${JACK_MICRO_VERSION}${BETA}

AC_SUBST(JACK_SO_VERSION)
AC_SUBST(JACK_VERSION)
AC_SUBST(JACK_RELEASE)

AM_INIT_AUTOMAKE(jack,${JACK_VERSION})

AC_PROG_CC
AC_PROG_CXX

JACK_CFLAGS="-g -Wall -D_REENTRANT"
JACK_OPT_CFLAGS="-D_REENTRANT -O6 -Wall -fomit-frame-pointer -ffast-math -fstrength-reduce -funroll-loops -fmove-all-movables"

AC_ARG_ENABLE(optimize,
     [  --enable-optimize       ask the compiler for its best optimizations.],
     [ if test "x$enable_optimize" != "xno" ; then JACK_CFLAGS="$JACK_OPT_CFLAGS" ; fi ])

AC_SUBST(JACK_CFLAGS)

XTRA=""

AC_ARG_ENABLE(fltk-client,
     [  --enable-fltk-client    build the FLTK test client.])

if test "x$enable_fltk_client" != "xno" ; then
     AC_CHECK_LIB(fltk,main,
         [ XTRA="$XTRA jack_fltk_client" ],
         [ AC_MSG_ERROR([*** you cannot build the FLTK client without the FLTK library])],
         [ -L/usr/X11R6/lib -lX11 -lXext ])
fi	    

AM_PATH_GLIB(1.0.0,,[AC_MSG_ERROR([*** JACK requires glib, but it does not appear to be installed])])

AC_CHECK_LIB(asound,snd_pcm_drop,
	     [:],
             [AC_MSG_ERROR([*** JACK currently requires ALSA (0.9.X) which you don't appear to have])]
)

AC_CHECK_LIB(sndfile,main,
	     [ XTRA="$XTRA jackrec" ],
             [AC_MSG_WARN([*** the jackrec client will be skipped since you do not see to have libsndfile installed])]
)

AC_SUBST(XTRA)

AC_PROG_LD
AM_PROG_LIBTOOL

ADDON_DIR=${libdir}/jack

AC_SUBST(ADDON_DIR)

dnl check for the libraries we need

AC_OUTPUT(Makefile
          jack.pc
	  jack/Makefile)



